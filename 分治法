分治法，顾名思义分而治之分为3个步骤：
分：将一个复杂的问题分成多个性质相同但规模更小的子问题
治：对子问题分别进行处理
合：将子问题的解进行合并，从而得到原问题的解
动态规划和分治法都基于递归思想，区别在于动态规划分解后的子问题有重复，分治法的子问题通常不会重复。
分治法问题具有以下特征：
1、问题规模缩小到一定程度可以很容易被解决
2、问题可以分解为若干个规模较小的相同性质的问题
3、问题的解等于子问题解的合并
4、问题分解的各个子问题相互独立，没有重复。

NO.23 合并k个排序链表
ListNode list = new ListNode()初始化应该空节点，无值
ListNode list = new ListNode(0)初始化应该节点值为0的空节点

def mergeKLists(self, lists: List[Optional[ListNode]]) -> Optional[ListNode]:
        amount = len(lists)
        interval = 1
        while interval < amount:
            for i in range(0, amount - interval, interval *2):
                lists[i] = self.mergeTwoLists(lists[i], lists[i + interval])
            interval *= 2
        return lists[0] if amount > 0 else None
    
    def mergeTwoLists(self, l1, l2):
        head = point = ListNode(0)
        while l1 and l2:
            if l1.val <= l2.val:
                point.next = l1
                l1 = l1.next
            else:
                point.next = l2
                l2 = l2.next
            point = point.next
        if not l1:
            point.next = l2
        else:
            point.next = l1
        return head.next
