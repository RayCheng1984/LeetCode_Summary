NO.38 计算并报数
每项都是对前一项的描述，计算每个字符出现的次数。
设前两项为特例，n == 1: return '1'; n == 2: return '2'
将n==2设为初始值，然后计算第n项的值；每轮的初始值new_res = [], num = 1, cur = res[0]
比较当前字符与上一个字符：s == cur; 若相等则num+1; 不相等则将现有值放入结果之中，最后一个值需要额外放入结果中。
最后将所有结果转换成字符串并拼接起来。
join函数语法：'sep'.join(sep_object)，其中sep为分隔符，sep_object为分割对象，可为字符串（包括要连接的元素字符串、元组、列表、字典）
map语法:map(function, iterable,...), function是一个函数，iterabel是一个可迭代对象，如列表、元组、字符串等，将function应用于iterable的每一个元素，结果以列表形式返回。
str是python的内置函数，将每个元素变为str类型，并以列表形式返回。

NO. 679 24点游戏
math.isclose(a, b)检查两个值是否彼此接近，如果真返回True，否则返回false。
每次选择两个数，把这两个数的计算结果和之前cards数组中的其他元素组成的列表拼接起来，作为新的cards向下递归。
每次选择两个数，另外减法和除法交换顺序算两次（作为除数/被除数/减数/被减数要区分），除法时要判断除数不能为0。
因为有误差，所以最后与24的误差足够小就正确。
if cards[i] and self.judgePoint24([cards[j] / cards[i]] + cards[0:i]+ cards[i+1:j] + cards[j+1:]):
                    return True

NO.37 数独游戏（暂缺）



NO.289 生命游戏
使用2表示活变死，用3表示死变活，最终死细胞为偶数，活细胞为奇数，对2取模即可得到结果
对数组宽、长内的方格：在它周围格子x in range(-1,2)、y in range(-1, 2)，统计活细胞个数
当格子本身或者上/下标出界时，跳过
当周围的8个格子中任意一个为1/2时，表示为活细胞，count+=1
4条生存定律中，由活变死的1和3条满足时，board[i][j] == 2; 当满足由死变活的4时，board[i][j] == 3， 剩下的活变活不用管
最后对数组宽、长内的方格board[i][j]对2取模
