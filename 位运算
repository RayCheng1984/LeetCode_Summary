NO.191 位1的个数
法一：利用掩码与待检测数进行与操作，使用左移运算将每位进行与操作，然后计数器加1
for i in range(32):if n & (1<<i):count +=1
法二：将低位且值为1的比特位翻转为0，计数器加1；当整数为0时，该整数不包含任何为1的比特位，返回计数器的值，可以使用n&(n-1)翻转最低有效位的比特值为0
while n:count += 1, n = n&(n-1)

NO.371 实现加法
a + b的值为相加后的进位值+原位值
使用与操作和移位操作，计算两数相加后的进位值
使用异或操作，计算两数相加后的原位值
循环上面过程，直至进位值为0

mask = 0xffffffff构造了一个32位整数的限定器，用于限定符号
while b & mask != 0:
carry = （a&b) << 1; a = a^b; b = carry ###备注这里b表示进位值，a表示原位值

python里面如果值太大，需要将前面的位数去掉，则需返回a & mask，否则返回a
